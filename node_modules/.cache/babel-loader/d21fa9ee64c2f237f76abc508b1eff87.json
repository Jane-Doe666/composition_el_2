{"ast":null,"code":"/* eslint-disable */\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return [...items].splice(startIndex, pageSize);\n}\n;\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n  const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n  const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n\n  if ([2, 3, 4].includes(lastDigit)) {\n    if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n    return p2;\n  } else {\n    return p1;\n  }\n}\n;\nconst xplural = [1, 2, 4, 113, 12, 112, 122, 1214, 138, 245, 446];\nconst x = 112;\nconst z = [2, 3, 4];\nconst res = xplural.map(x1 => {\n  //if ([12, 13, 14].includes(x1 % 100)) return `${x1} человек`\n  //if([2, 3, 4].includes(x1 % 10)) return `${x1} человека`\n  //return `${x1} человек`\n  [12, 13, 14].includes(x1 % 100) ? `${x1} человек` : [2, 3, 4].includes(x1 % 10) ? `${x1} человека` : `${x1} человек`;\n});\nconsole.log(res);","map":{"version":3,"names":["paginate","items","pageNumber","pageSize","startIndex","splice","renderPersonLetterEnd","qtyOfPerson","p1","p2","lastDigit","Number","toString","slice","lastTwoDigit","includes","xplural","x","z","res","map","x1","console","log"],"sources":["/Users/anastasiakazak/Desktop/myProgectReact/src/components/utilites.js"],"sourcesContent":["/* eslint-disable */\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n};\n\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n    const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n    const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n    if ([2, 3, 4].includes(lastDigit)) {\n        if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n        return p2;\n    } else {\n        return p1;\n    }\n};\n\nconst xplural = [1, 2, 4, 113, 12, 112, 122, 1214, 138, 245, 446]\nconst x = 112\n\nconst z = [2, 3, 4]\n\nconst res = xplural.map( (x1) => {\n        //if ([12, 13, 14].includes(x1 % 100)) return `${x1} человек`\n        //if([2, 3, 4].includes(x1 % 10)) return `${x1} человека`\n        //return `${x1} человек`\n    [12, 13, 14].includes(x1 % 100) ? `${x1} человек` : [2, 3, 4].includes(x1 % 10) ? `${x1} человека` : `${x1} человек`\n    }\n)\n\n\nconsole.log(res)\n\n\n\n\n"],"mappings":"AAAA;AAEA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EAClD,MAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAd,IAAmBC,QAAtC;EACA,OAAO,CAAC,GAAGF,KAAJ,EAAWI,MAAX,CAAkBD,UAAlB,EAA8BD,QAA9B,CAAP;AACH;AAAA;AAED,OAAO,SAASG,qBAAT,CAA+BC,WAA/B,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoD;EACvD,MAAMC,SAAS,GAAGC,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAAxB;EACA,MAAMC,YAAY,GAAGH,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAA3B;;EACA,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUE,QAAV,CAAmBL,SAAnB,CAAJ,EAAmC;IAC/B,IAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaK,QAAb,CAAsBD,YAAtB,CAAJ,EAAyC,OAAON,EAAP;IACzC,OAAOC,EAAP;EACH,CAHD,MAGO;IACH,OAAOD,EAAP;EACH;AACJ;AAAA;AAED,MAAMQ,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,EAAe,EAAf,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,IAA7B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,CAAhB;AACA,MAAMC,CAAC,GAAG,GAAV;AAEA,MAAMC,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;AAEA,MAAMC,GAAG,GAAGH,OAAO,CAACI,GAAR,CAAcC,EAAD,IAAQ;EACzB;EACA;EACA;EACJ,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaN,QAAb,CAAsBM,EAAE,GAAG,GAA3B,IAAmC,GAAEA,EAAG,UAAxC,GAAoD,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUN,QAAV,CAAmBM,EAAE,GAAG,EAAxB,IAA+B,GAAEA,EAAG,WAApC,GAAkD,GAAEA,EAAG,UAA3G;AACC,CALO,CAAZ;AASAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ"},"metadata":{},"sourceType":"module"}