{"ast":null,"code":"/* eslint-disable */\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return [...items].splice(startIndex, pageSize);\n}\n;\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n  const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n  const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n\n  if ([2, 3, 4].includes(lastDigit)) {\n    if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n    return p2;\n  } else {\n    return p1;\n  }\n}\n;\nconst xplural = [1, 2, 4, 12, 112, 122, 1214, 138, 245, 446];\nconst x = 112;\nconst y = [12, 13, 14];\nconst z = [2, 3, 4];\nconst res = xplural.map(x1 => {\n  //if (x1 % 100 === 12 || x1 % 100 === 13 || x1 % 100 === 14) return `${x1} человек`\n  if ([12, 13, 14].includes(x1 % 100)) return `${x1} человек`;\n  if (x1 % 10 === 2 || x1 % 10 === 3 || x1 % 10 === 4 || x1 > 1 && x1 < 5) return `${x1} человека`; //if (x1 > 1 && x1 < 5) return `${x1} человека`\n\n  return `${x1} человек`;\n});\nconsole.log(res);","map":{"version":3,"names":["paginate","items","pageNumber","pageSize","startIndex","splice","renderPersonLetterEnd","qtyOfPerson","p1","p2","lastDigit","Number","toString","slice","lastTwoDigit","includes","xplural","x","y","z","res","map","x1","console","log"],"sources":["/Users/anastasiakazak/Desktop/myProgectReact/src/components/utilites.js"],"sourcesContent":["/* eslint-disable */\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n};\n\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n    const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n    const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n    if ([2, 3, 4].includes(lastDigit)) {\n        if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n        return p2;\n    } else {\n        return p1;\n    }\n};\n\nconst xplural = [1, 2, 4, 12, 112, 122, 1214, 138, 245, 446]\nconst x = 112\nconst y = [12, 13, 14]\nconst z = [2, 3, 4]\n\nconst res = xplural.map( (x1) => {\n        //if (x1 % 100 === 12 || x1 % 100 === 13 || x1 % 100 === 14) return `${x1} человек`\n        if ([12, 13, 14].includes(x1 % 100)) return `${x1} человек`\n        if (x1 % 10 === 2 || x1 % 10 === 3 || x1 % 10 === 4 || x1 > 1 && x1 < 5) return `${x1} человека`\n        //if (x1 > 1 && x1 < 5) return `${x1} человека`\n        return `${x1} человек`\n    }\n)\n\n\nconsole.log(res)\n\n\n\n\n"],"mappings":"AAAA;AAEA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EAClD,MAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAd,IAAmBC,QAAtC;EACA,OAAO,CAAC,GAAGF,KAAJ,EAAWI,MAAX,CAAkBD,UAAlB,EAA8BD,QAA9B,CAAP;AACH;AAAA;AAED,OAAO,SAASG,qBAAT,CAA+BC,WAA/B,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoD;EACvD,MAAMC,SAAS,GAAGC,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAAxB;EACA,MAAMC,YAAY,GAAGH,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAA3B;;EACA,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUE,QAAV,CAAmBL,SAAnB,CAAJ,EAAmC;IAC/B,IAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaK,QAAb,CAAsBD,YAAtB,CAAJ,EAAyC,OAAON,EAAP;IACzC,OAAOC,EAAP;EACH,CAHD,MAGO;IACH,OAAOD,EAAP;EACH;AACJ;AAAA;AAED,MAAMQ,OAAO,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,GAAd,EAAmB,GAAnB,EAAwB,IAAxB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,CAAhB;AACA,MAAMC,CAAC,GAAG,GAAV;AACA,MAAMC,CAAC,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAV;AACA,MAAMC,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;AAEA,MAAMC,GAAG,GAAGJ,OAAO,CAACK,GAAR,CAAcC,EAAD,IAAQ;EACzB;EACA,IAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaP,QAAb,CAAsBO,EAAE,GAAG,GAA3B,CAAJ,EAAqC,OAAQ,GAAEA,EAAG,UAAb;EACrC,IAAIA,EAAE,GAAG,EAAL,KAAY,CAAZ,IAAiBA,EAAE,GAAG,EAAL,KAAY,CAA7B,IAAkCA,EAAE,GAAG,EAAL,KAAY,CAA9C,IAAmDA,EAAE,GAAG,CAAL,IAAUA,EAAE,GAAG,CAAtE,EAAyE,OAAQ,GAAEA,EAAG,WAAb,CAHhD,CAIzB;;EACA,OAAQ,GAAEA,EAAG,UAAb;AACH,CANO,CAAZ;AAUAC,OAAO,CAACC,GAAR,CAAYJ,GAAZ"},"metadata":{},"sourceType":"module"}