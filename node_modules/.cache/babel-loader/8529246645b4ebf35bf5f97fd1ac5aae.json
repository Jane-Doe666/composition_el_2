{"ast":null,"code":"/* eslint-disable */\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return [...items].splice(startIndex, pageSize);\n}\n;\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n  const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n  const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n\n  if ([2, 3, 4].includes(lastDigit)) {\n    if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n    return p2;\n  } else {\n    return p1;\n  }\n}\n; //const x = [1, 2, 4, 12, 112, 122, 1214, 138, 245, 446]\n\nconst x = 112;\nconst y = [12, 13, 14];\nconst z = [2, 3, 4];\n\nconst test1 = (x1, y1, z1) => {\n  y1.map(item => x1 % 100 === item ? \"человек\" : 'чеовека');\n  z1.map(item => x1 % 10 === item ? 'чеовека' : 'no');\n};\n\nconst t1 = test1(x, y, z);\nconsole.log(t1);\n\nconst test2 = (x, y) => y.map(item => item % 100 === 12) ? \"человек\" : \"ok\";\n\nconst t2 = test2();\nconsole.log(t2);","map":{"version":3,"names":["paginate","items","pageNumber","pageSize","startIndex","splice","renderPersonLetterEnd","qtyOfPerson","p1","p2","lastDigit","Number","toString","slice","lastTwoDigit","includes","x","y","z","test1","x1","y1","z1","map","item","t1","console","log","test2","t2"],"sources":["/Users/anastasiakazak/Desktop/myProgectReact/src/components/utilites.js"],"sourcesContent":["/* eslint-disable */\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n};\n\nexport function renderPersonLetterEnd(qtyOfPerson, p1, p2) {\n    const lastDigit = Number(qtyOfPerson.toString().slice(-1));\n    const lastTwoDigit = Number(qtyOfPerson.toString().slice(-2));\n    if ([2, 3, 4].includes(lastDigit)) {\n        if ([12, 13, 14].includes(lastTwoDigit)) return p1;\n        return p2;\n    } else {\n        return p1;\n    }\n};\n\n//const x = [1, 2, 4, 12, 112, 122, 1214, 138, 245, 446]\nconst x = 112\nconst y = [12, 13, 14]\nconst z = [2, 3, 4]\n\nconst test1 = (x1, y1, z1)=>{\n    y1.map(item => x1 % 100 === item ? \"человек\" : 'чеовека')\n    z1.map(item => x1 % 10 === item ? 'чеовека' : 'no')\n\n}\n\nconst t1 = test1(x, y, z)\nconsole.log(t1)\n\n\nconst test2 = (x, y)=>\n    y.map(item => item % 100 === 12) ? \"человек\" : \"ok\"\n\nconst t2 = test2()\nconsole.log(t2)"],"mappings":"AAAA;AAEA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,UAAzB,EAAqCC,QAArC,EAA+C;EAClD,MAAMC,UAAU,GAAG,CAACF,UAAU,GAAG,CAAd,IAAmBC,QAAtC;EACA,OAAO,CAAC,GAAGF,KAAJ,EAAWI,MAAX,CAAkBD,UAAlB,EAA8BD,QAA9B,CAAP;AACH;AAAA;AAED,OAAO,SAASG,qBAAT,CAA+BC,WAA/B,EAA4CC,EAA5C,EAAgDC,EAAhD,EAAoD;EACvD,MAAMC,SAAS,GAAGC,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAAxB;EACA,MAAMC,YAAY,GAAGH,MAAM,CAACJ,WAAW,CAACK,QAAZ,GAAuBC,KAAvB,CAA6B,CAAC,CAA9B,CAAD,CAA3B;;EACA,IAAI,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAUE,QAAV,CAAmBL,SAAnB,CAAJ,EAAmC;IAC/B,IAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAaK,QAAb,CAAsBD,YAAtB,CAAJ,EAAyC,OAAON,EAAP;IACzC,OAAOC,EAAP;EACH,CAHD,MAGO;IACH,OAAOD,EAAP;EACH;AACJ;AAAA,C,CAED;;AACA,MAAMQ,CAAC,GAAG,GAAV;AACA,MAAMC,CAAC,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAV;AACA,MAAMC,CAAC,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAV;;AAEA,MAAMC,KAAK,GAAG,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,KAAc;EACxBD,EAAE,CAACE,GAAH,CAAOC,IAAI,IAAIJ,EAAE,GAAG,GAAL,KAAaI,IAAb,GAAoB,SAApB,GAAgC,SAA/C;EACAF,EAAE,CAACC,GAAH,CAAOC,IAAI,IAAIJ,EAAE,GAAG,EAAL,KAAYI,IAAZ,GAAmB,SAAnB,GAA+B,IAA9C;AAEH,CAJD;;AAMA,MAAMC,EAAE,GAAGN,KAAK,CAACH,CAAD,EAAIC,CAAJ,EAAOC,CAAP,CAAhB;AACAQ,OAAO,CAACC,GAAR,CAAYF,EAAZ;;AAGA,MAAMG,KAAK,GAAG,CAACZ,CAAD,EAAIC,CAAJ,KACVA,CAAC,CAACM,GAAF,CAAMC,IAAI,IAAIA,IAAI,GAAG,GAAP,KAAe,EAA7B,IAAmC,SAAnC,GAA+C,IADnD;;AAGA,MAAMK,EAAE,GAAGD,KAAK,EAAhB;AACAF,OAAO,CAACC,GAAR,CAAYE,EAAZ"},"metadata":{},"sourceType":"module"}